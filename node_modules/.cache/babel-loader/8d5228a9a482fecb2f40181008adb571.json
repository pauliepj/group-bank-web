{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst faces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    attachArray: \"material\",\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\n\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onPointerDown: props.onClick || handlePointerDown\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\n\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  color = colors.bg,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handlePointerDown = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onPointerDown: onClick || handlePointerDown\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/GizmoViewcube.js"],"names":["_extends","React","useGizmoContext","Vector3","CanvasTexture","colors","bg","hover","text","stroke","faces","makePositionVector","xyz","multiplyScalar","corners","map","cornerDimensions","edges","edgeDimensions","edge","toArray","axis","FaceMaterial","index","font","color","hoverColor","textColor","strokeColor","opacity","texture","useMemo","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","strokeStyle","strokeRect","textAlign","fillText","toUpperCase","attachArray","transparent","FaceCube","props","tweenCamera","raycast","setHover","useState","handlePointerOut","e","stopPropagation","handlePointerDown","face","normal","handlePointerMove","Math","floor","faceIndex","onPointerOut","onPointerMove","onPointerDown","onClick","Array","_","key","EdgeCube","dimensions","position","handlePointerOver","onPointerOver","visible","args","GizmoViewcube","scale","corner","intensity"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useGizmoContext } from './GizmoHelper.js';\r\nimport { Vector3, CanvasTexture } from 'three';\r\n\r\nconst colors = {\r\n  bg: '#f0f0f0',\r\n  hover: '#999',\r\n  text: 'black',\r\n  stroke: 'black'\r\n};\r\nconst faces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\r\n\r\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\r\n\r\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\r\nconst cornerDimensions = [0.25, 0.25, 0.25];\r\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\r\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\r\n\r\nconst FaceMaterial = ({\r\n  hover,\r\n  index,\r\n  font = '20px Inter var, Arial, sans-serif',\r\n  color = colors.bg,\r\n  hoverColor = colors.hover,\r\n  textColor = colors.text,\r\n  strokeColor = colors.stroke,\r\n  opacity = 1\r\n}) => {\r\n  const texture = React.useMemo(() => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 128;\r\n    canvas.height = 128;\r\n    const context = canvas.getContext('2d');\r\n    context.fillStyle = color;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.strokeStyle = strokeColor;\r\n    context.strokeRect(0, 0, canvas.width, canvas.height);\r\n    context.font = font;\r\n    context.textAlign = 'center';\r\n    context.fillStyle = textColor;\r\n    context.fillText(faces[index].toUpperCase(), 64, 76);\r\n    return new CanvasTexture(canvas);\r\n  }, [index, font, color, textColor, strokeColor]);\r\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\r\n    map: texture,\r\n    attachArray: \"material\",\r\n    color: hover ? hoverColor : 'white',\r\n    transparent: true,\r\n    opacity: opacity\r\n  });\r\n};\r\n\r\nconst FaceCube = props => {\r\n  const {\r\n    tweenCamera,\r\n    raycast\r\n  } = useGizmoContext();\r\n  const [hover, setHover] = React.useState(null);\r\n\r\n  const handlePointerOut = e => {\r\n    e.stopPropagation();\r\n    setHover(null);\r\n  };\r\n\r\n  const handlePointerDown = e => {\r\n    e.stopPropagation();\r\n    tweenCamera(e.face.normal);\r\n  };\r\n\r\n  const handlePointerMove = e => {\r\n    e.stopPropagation();\r\n    setHover(Math.floor(e.faceIndex / 2));\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(\"mesh\", {\r\n    raycast: raycast,\r\n    onPointerOut: handlePointerOut,\r\n    onPointerMove: handlePointerMove,\r\n    onPointerDown: props.onClick || handlePointerDown\r\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\r\n    key: index,\r\n    index: index,\r\n    hover: hover === index\r\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\r\n};\r\n\r\nconst EdgeCube = ({\r\n  onClick,\r\n  dimensions,\r\n  position,\r\n  color = colors.bg,\r\n  hoverColor = colors.hover\r\n}) => {\r\n  const {\r\n    tweenCamera,\r\n    raycast\r\n  } = useGizmoContext();\r\n  const [hover, setHover] = React.useState(false);\r\n\r\n  const handlePointerOut = e => {\r\n    e.stopPropagation();\r\n    setHover(false);\r\n  };\r\n\r\n  const handlePointerOver = e => {\r\n    e.stopPropagation();\r\n    setHover(true);\r\n  };\r\n\r\n  const handlePointerDown = e => {\r\n    e.stopPropagation();\r\n    tweenCamera(position);\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(\"mesh\", {\r\n    position: position,\r\n    raycast: raycast,\r\n    onPointerOver: handlePointerOver,\r\n    onPointerOut: handlePointerOut,\r\n    onPointerDown: onClick || handlePointerDown\r\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\r\n    color: hover ? hoverColor : 'white',\r\n    transparent: true,\r\n    opacity: 0.6,\r\n    visible: hover\r\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\r\n    args: dimensions\r\n  }));\r\n};\r\n\r\nconst GizmoViewcube = props => {\r\n  return /*#__PURE__*/React.createElement(\"group\", {\r\n    scale: [60, 60, 60]\r\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\r\n    key: index,\r\n    position: edge,\r\n    dimensions: edgeDimensions[index]\r\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\r\n    key: index,\r\n    position: corner,\r\n    dimensions: cornerDimensions\r\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\r\n    intensity: 0.5\r\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\r\n    position: [10, 10, 10],\r\n    intensity: 0.5\r\n  }));\r\n};\r\n\r\nexport { GizmoViewcube };\r\n"]},"metadata":{},"sourceType":"module"}