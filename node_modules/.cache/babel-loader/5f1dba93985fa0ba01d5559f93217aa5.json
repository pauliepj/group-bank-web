{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Color } from 'three';\nimport { Pass } from './Pass.js';\n\nclass RenderPass extends Pass {\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\n    super();\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"overrideMaterial\", void 0);\n\n    _defineProperty(this, \"clearColor\", void 0);\n\n    _defineProperty(this, \"clearAlpha\", void 0);\n\n    _defineProperty(this, \"clearDepth\", false);\n\n    _defineProperty(this, \"_oldClearColor\", new Color());\n\n    this.scene = scene;\n    this.camera = camera;\n    this.overrideMaterial = overrideMaterial;\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha;\n    this.clear = true;\n    this.needsSwap = false;\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    let oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    let oldClearAlpha;\n    let oldOverrideMaterial = null;\n\n    if (this.overrideMaterial !== undefined) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n\n    if (this.overrideMaterial !== undefined) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n\n    renderer.autoClear = oldAutoClear;\n  }\n\n}\n\nexport { RenderPass };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/postprocessing/RenderPass.js"],"names":["_defineProperty","Color","Pass","RenderPass","constructor","scene","camera","overrideMaterial","clearColor","clearAlpha","clear","needsSwap","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","undefined","getClearColor","_oldClearColor","getClearAlpha","setClearColor","clearDepth","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,UAAN,SAAyBD,IAAzB,CAA8B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,gBAAhB,EAAkCC,UAAlC,EAA8CC,UAAU,GAAG,CAA3D,EAA8D;AACvE;;AAEAT,IAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAK,CAArB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,kBAAP,EAA2B,KAAK,CAAhC,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,YAAP,EAAqB,KAAK,CAA1B,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,YAAP,EAAqB,KAAK,CAA1B,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,YAAP,EAAqB,KAArB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,IAAIC,KAAJ,EAAzB,CAAf;;AAEA,SAAKI,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACD;;AAEDC,EAAAA,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,UAAxB,EAAoC;AACxC,QAAIC,YAAY,GAAGH,QAAQ,CAACI,SAA5B;AACAJ,IAAAA,QAAQ,CAACI,SAAT,GAAqB,KAArB;AACA,QAAIC,aAAJ;AACA,QAAIC,mBAAmB,GAAG,IAA1B;;AAEA,QAAI,KAAKZ,gBAAL,KAA0Ba,SAA9B,EAAyC;AACvCD,MAAAA,mBAAmB,GAAG,KAAKd,KAAL,CAAWE,gBAAjC;AACA,WAAKF,KAAL,CAAWE,gBAAX,GAA8B,KAAKA,gBAAnC;AACD;;AAED,QAAI,KAAKC,UAAT,EAAqB;AACnBK,MAAAA,QAAQ,CAACQ,aAAT,CAAuB,KAAKC,cAA5B;AACAJ,MAAAA,aAAa,GAAGL,QAAQ,CAACU,aAAT,EAAhB;AACAV,MAAAA,QAAQ,CAACW,aAAT,CAAuB,KAAKhB,UAA5B,EAAwC,KAAKC,UAA7C;AACD;;AAED,QAAI,KAAKgB,UAAT,EAAqB;AACnBZ,MAAAA,QAAQ,CAACY,UAAT;AACD;;AAEDZ,IAAAA,QAAQ,CAACa,eAAT,CAAyB,KAAKC,cAAL,GAAsB,IAAtB,GAA6BZ,UAAtD,EArBwC,CAqB2B;;AAEnE,QAAI,KAAKL,KAAT,EAAgBG,QAAQ,CAACH,KAAT,CAAeG,QAAQ,CAACe,cAAxB,EAAwCf,QAAQ,CAACgB,cAAjD,EAAiEhB,QAAQ,CAACiB,gBAA1E;AAChBjB,IAAAA,QAAQ,CAACD,MAAT,CAAgB,KAAKP,KAArB,EAA4B,KAAKC,MAAjC;;AAEA,QAAI,KAAKE,UAAT,EAAqB;AACnBK,MAAAA,QAAQ,CAACW,aAAT,CAAuB,KAAKF,cAA5B,EAA4CJ,aAA5C;AACD;;AAED,QAAI,KAAKX,gBAAL,KAA0Ba,SAA9B,EAAyC;AACvC,WAAKf,KAAL,CAAWE,gBAAX,GAA8BY,mBAA9B;AACD;;AAEDN,IAAAA,QAAQ,CAACI,SAAT,GAAqBD,YAArB;AACD;;AA9D2B;;AAkE9B,SAASb,UAAT","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\r\nimport { Color } from 'three';\r\nimport { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\r\n    super();\r\n\r\n    _defineProperty(this, \"scene\", void 0);\r\n\r\n    _defineProperty(this, \"camera\", void 0);\r\n\r\n    _defineProperty(this, \"overrideMaterial\", void 0);\r\n\r\n    _defineProperty(this, \"clearColor\", void 0);\r\n\r\n    _defineProperty(this, \"clearAlpha\", void 0);\r\n\r\n    _defineProperty(this, \"clearDepth\", false);\r\n\r\n    _defineProperty(this, \"_oldClearColor\", new Color());\r\n\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.overrideMaterial = overrideMaterial;\r\n    this.clearColor = clearColor;\r\n    this.clearAlpha = clearAlpha;\r\n    this.clear = true;\r\n    this.needsSwap = false;\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer) {\r\n    let oldAutoClear = renderer.autoClear;\r\n    renderer.autoClear = false;\r\n    let oldClearAlpha;\r\n    let oldOverrideMaterial = null;\r\n\r\n    if (this.overrideMaterial !== undefined) {\r\n      oldOverrideMaterial = this.scene.overrideMaterial;\r\n      this.scene.overrideMaterial = this.overrideMaterial;\r\n    }\r\n\r\n    if (this.clearColor) {\r\n      renderer.getClearColor(this._oldClearColor);\r\n      oldClearAlpha = renderer.getClearAlpha();\r\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n    }\r\n\r\n    if (this.clearDepth) {\r\n      renderer.clearDepth();\r\n    }\r\n\r\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\r\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n    renderer.render(this.scene, this.camera);\r\n\r\n    if (this.clearColor) {\r\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\r\n    }\r\n\r\n    if (this.overrideMaterial !== undefined) {\r\n      this.scene.overrideMaterial = oldOverrideMaterial;\r\n    }\r\n\r\n    renderer.autoClear = oldAutoClear;\r\n  }\r\n\r\n}\r\n\r\nexport { RenderPass };\r\n"]},"metadata":{},"sourceType":"module"}