{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1 } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber'; // eslint-disable-next-line prettier/prettier\n\nconst Text = /*#__PURE__*/React.forwardRef(({\n  anchorX = 'center',\n  anchorY = 'middle',\n  children,\n  onSync,\n  ...props\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    let n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\nexport { Text };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/Text.js"],"names":["_extends","React","Text","Text$1","useThree","forwardRef","anchorX","anchorY","children","onSync","props","ref","invalidate","troikaMesh","useState","nodes","text","useMemo","n","t","Children","forEach","child","push","useLayoutEffect","sync","useEffect","dispose","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,mBAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB,C,CAEA;;AACA,MAAMF,IAAI,GAAG,aAAaD,KAAK,CAACI,UAAN,CAAiB,CAAC;AAC1CC,EAAAA,OAAO,GAAG,QADgC;AAE1CC,EAAAA,OAAO,GAAG,QAFgC;AAG1CC,EAAAA,QAH0C;AAI1CC,EAAAA,MAJ0C;AAK1C,KAAGC;AALuC,CAAD,EAMxCC,GANwC,KAMhC;AACT,QAAMC,UAAU,GAAGR,QAAQ,CAAC,CAAC;AAC3BQ,IAAAA;AAD2B,GAAD,KAEtBA,UAFqB,CAA3B;AAGA,QAAM,CAACC,UAAD,IAAeZ,KAAK,CAACa,QAAN,CAAe,MAAM,IAAIX,MAAJ,EAArB,CAArB;AACA,QAAM,CAACY,KAAD,EAAQC,IAAR,IAAgBf,KAAK,CAACgB,OAAN,CAAc,MAAM;AACxC,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAC,GAAG,EAAR;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBb,QAAvB,EAAiCc,KAAK,IAAI;AACxC,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1DH,QAAAA,CAAC,IAAIG,KAAL;AACD,OAFD,MAEO;AACLJ,QAAAA,CAAC,CAACK,IAAF,CAAOD,KAAP;AACD;AACF,KAND;AAOA,WAAO,CAACJ,CAAD,EAAIC,CAAJ,CAAP;AACD,GAXqB,EAWnB,CAACX,QAAD,CAXmB,CAAtB;AAYAP,EAAAA,KAAK,CAACuB,eAAN,CAAsB,MAAM,KAAKX,UAAU,CAACY,IAAX,CAAgB,MAAM;AACrDb,IAAAA,UAAU;AACV,QAAIH,MAAJ,EAAYA,MAAM,CAACI,UAAD,CAAN;AACb,GAHgC,CAAjC;AAIAZ,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAMb,UAAU,CAACc,OAAX,EAAb;AACD,GAFD,EAEG,CAACd,UAAD,CAFH;AAGA,SAAO,aAAaZ,KAAK,CAAC2B,aAAN,CAAoB,WAApB,EAAiC5B,QAAQ,CAAC;AAC5D6B,IAAAA,MAAM,EAAEhB,UADoD;AAE5DF,IAAAA,GAAG,EAAEA,GAFuD;AAG5DK,IAAAA,IAAI,EAAEA,IAHsD;AAI5DV,IAAAA,OAAO,EAAEA,OAJmD;AAK5DC,IAAAA,OAAO,EAAEA;AALmD,GAAD,EAM1DG,KAN0D,CAAzC,EAMTK,KANS,CAApB;AAOD,CArCyB,CAA1B;AAuCA,SAASb,IAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { Text as Text$1 } from 'troika-three-text';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\n// eslint-disable-next-line prettier/prettier\r\nconst Text = /*#__PURE__*/React.forwardRef(({\r\n  anchorX = 'center',\r\n  anchorY = 'middle',\r\n  children,\r\n  onSync,\r\n  ...props\r\n}, ref) => {\r\n  const invalidate = useThree(({\r\n    invalidate\r\n  }) => invalidate);\r\n  const [troikaMesh] = React.useState(() => new Text$1());\r\n  const [nodes, text] = React.useMemo(() => {\r\n    let n = [];\r\n    let t = '';\r\n    React.Children.forEach(children, child => {\r\n      if (typeof child === 'string' || typeof child === 'number') {\r\n        t += child;\r\n      } else {\r\n        n.push(child);\r\n      }\r\n    });\r\n    return [n, t];\r\n  }, [children]);\r\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\r\n    invalidate();\r\n    if (onSync) onSync(troikaMesh);\r\n  }));\r\n  React.useEffect(() => {\r\n    return () => troikaMesh.dispose();\r\n  }, [troikaMesh]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: troikaMesh,\r\n    ref: ref,\r\n    text: text,\r\n    anchorX: anchorX,\r\n    anchorY: anchorY\r\n  }, props), nodes);\r\n});\r\n\r\nexport { Text };\r\n"]},"metadata":{},"sourceType":"module"}