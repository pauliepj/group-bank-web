{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tokenMatcher = exports.createTokenInstance = exports.EOF = exports.createToken = exports.hasTokenLabel = exports.tokenName = exports.tokenLabel = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar lexer_public_1 = require(\"./lexer_public\");\n\nvar tokens_1 = require(\"./tokens\");\n\nfunction tokenLabel(tokType) {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\n\nexports.tokenLabel = tokenLabel;\n\nfunction tokenName(tokType) {\n  return tokType.name;\n}\n\nexports.tokenName = tokenName;\n\nfunction hasTokenLabel(obj) {\n  return utils_1.isString(obj.LABEL) && obj.LABEL !== \"\";\n}\n\nexports.hasTokenLabel = hasTokenLabel;\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\n\nfunction createToken(config) {\n  return createTokenInternal(config);\n}\n\nexports.createToken = createToken;\n\nfunction createTokenInternal(config) {\n  var pattern = config.pattern;\n  var tokenType = {};\n  tokenType.name = config.name;\n\n  if (!utils_1.isUndefined(pattern)) {\n    tokenType.PATTERN = pattern;\n  }\n\n  if (utils_1.has(config, PARENT)) {\n    throw \"The parent property is no longer supported.\\n\" + \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\";\n  }\n\n  if (utils_1.has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = config[CATEGORIES];\n  }\n\n  tokens_1.augmentTokenTypes([tokenType]);\n\n  if (utils_1.has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL];\n  }\n\n  if (utils_1.has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP];\n  }\n\n  if (utils_1.has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE];\n  }\n\n  if (utils_1.has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE];\n  }\n\n  if (utils_1.has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT];\n  }\n\n  if (utils_1.has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS];\n  }\n\n  if (utils_1.has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n  }\n\n  return tokenType;\n}\n\nexports.EOF = createToken({\n  name: \"EOF\",\n  pattern: lexer_public_1.Lexer.NA\n});\ntokens_1.augmentTokenTypes([exports.EOF]);\n\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n  return {\n    image: image,\n    startOffset: startOffset,\n    endOffset: endOffset,\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    endColumn: endColumn,\n    tokenTypeIdx: tokType.tokenTypeIdx,\n    tokenType: tokType\n  };\n}\n\nexports.createTokenInstance = createTokenInstance;\n\nfunction tokenMatcher(token, tokType) {\n  return tokens_1.tokenStructuredMatcher(token, tokType);\n}\n\nexports.tokenMatcher = tokenMatcher;","map":{"version":3,"sources":["../../../src/scan/tokens_public.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.tokenMatcher = exports.createTokenInstance = exports.EOF = exports.createToken = exports.hasTokenLabel = exports.tokenName = exports.tokenLabel = void 0;\r\nvar utils_1 = require(\"@chevrotain/utils\");\r\nvar lexer_public_1 = require(\"./lexer_public\");\r\nvar tokens_1 = require(\"./tokens\");\r\nfunction tokenLabel(tokType) {\r\n    if (hasTokenLabel(tokType)) {\r\n        return tokType.LABEL;\r\n    }\r\n    else {\r\n        return tokType.name;\r\n    }\r\n}\r\nexports.tokenLabel = tokenLabel;\r\nfunction tokenName(tokType) {\r\n    return tokType.name;\r\n}\r\nexports.tokenName = tokenName;\r\nfunction hasTokenLabel(obj) {\r\n    return utils_1.isString(obj.LABEL) && obj.LABEL !== \"\";\r\n}\r\nexports.hasTokenLabel = hasTokenLabel;\r\nvar PARENT = \"parent\";\r\nvar CATEGORIES = \"categories\";\r\nvar LABEL = \"label\";\r\nvar GROUP = \"group\";\r\nvar PUSH_MODE = \"push_mode\";\r\nvar POP_MODE = \"pop_mode\";\r\nvar LONGER_ALT = \"longer_alt\";\r\nvar LINE_BREAKS = \"line_breaks\";\r\nvar START_CHARS_HINT = \"start_chars_hint\";\r\nfunction createToken(config) {\r\n    return createTokenInternal(config);\r\n}\r\nexports.createToken = createToken;\r\nfunction createTokenInternal(config) {\r\n    var pattern = config.pattern;\r\n    var tokenType = {};\r\n    tokenType.name = config.name;\r\n    if (!utils_1.isUndefined(pattern)) {\r\n        tokenType.PATTERN = pattern;\r\n    }\r\n    if (utils_1.has(config, PARENT)) {\r\n        throw (\"The parent property is no longer supported.\\n\" +\r\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\r\n    }\r\n    if (utils_1.has(config, CATEGORIES)) {\r\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\r\n        tokenType.CATEGORIES = config[CATEGORIES];\r\n    }\r\n    tokens_1.augmentTokenTypes([tokenType]);\r\n    if (utils_1.has(config, LABEL)) {\r\n        tokenType.LABEL = config[LABEL];\r\n    }\r\n    if (utils_1.has(config, GROUP)) {\r\n        tokenType.GROUP = config[GROUP];\r\n    }\r\n    if (utils_1.has(config, POP_MODE)) {\r\n        tokenType.POP_MODE = config[POP_MODE];\r\n    }\r\n    if (utils_1.has(config, PUSH_MODE)) {\r\n        tokenType.PUSH_MODE = config[PUSH_MODE];\r\n    }\r\n    if (utils_1.has(config, LONGER_ALT)) {\r\n        tokenType.LONGER_ALT = config[LONGER_ALT];\r\n    }\r\n    if (utils_1.has(config, LINE_BREAKS)) {\r\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\r\n    }\r\n    if (utils_1.has(config, START_CHARS_HINT)) {\r\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\r\n    }\r\n    return tokenType;\r\n}\r\nexports.EOF = createToken({ name: \"EOF\", pattern: lexer_public_1.Lexer.NA });\r\ntokens_1.augmentTokenTypes([exports.EOF]);\r\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\r\n    return {\r\n        image: image,\r\n        startOffset: startOffset,\r\n        endOffset: endOffset,\r\n        startLine: startLine,\r\n        endLine: endLine,\r\n        startColumn: startColumn,\r\n        endColumn: endColumn,\r\n        tokenTypeIdx: tokType.tokenTypeIdx,\r\n        tokenType: tokType\r\n    };\r\n}\r\nexports.createTokenInstance = createTokenInstance;\r\nfunction tokenMatcher(token, tokType) {\r\n    return tokens_1.tokenStructuredMatcher(token, tokType);\r\n}\r\nexports.tokenMatcher = tokenMatcher;\r\n//# sourceMappingURL=tokens_public.js.map"]},"metadata":{},"sourceType":"script"}