{"ast":null,"code":"/**\r\n * Vignette shader\r\n * based on PaintEffect postprocess from ro.me\r\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\r\n */\nvar VignetteShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    offset: {\n      value: 1.0\n    },\n    darkness: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float offset;', 'uniform float darkness;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', // Eskil's vignette\n  '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );', '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\n  /*\r\n  // alternative version from glfx.js\r\n  // this one makes more \"dusty\" look (as opposed to \"burned\")\r\n  \"\tvec4 color = texture2D( tDiffuse, vUv );\",\r\n  \"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\r\n  \"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\r\n  \"\tgl_FragColor = color;\",\r\n  */\n  '}'].join('\\n')\n};\nexport { VignetteShader };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/shaders/VignetteShader.js"],"names":["VignetteShader","uniforms","tDiffuse","value","offset","darkness","vertexShader","join","fragmentShader"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KADF;AAIRC,IAAAA,MAAM,EAAE;AACND,MAAAA,KAAK,EAAE;AADD,KAJA;AAORE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAE;AADC;AAPF,GADS;AAYnBG,EAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,YAAvC,EAAqD,4EAArD,EAAmI,GAAnI,EAAwIC,IAAxI,CAA6I,IAA7I,CAZK;AAanBC,EAAAA,cAAc,EAAE,CAAC,uBAAD,EAA0B,yBAA1B,EAAqD,6BAArD,EAAoF,mBAApF,EAAyG,eAAzG,EAA0H;AAC1I,6CADgB,EAC6B,oDAD7B,EACmF,2FADnF;AAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KAVgB,EAUXD,IAVW,CAUN,IAVM;AAbG,CAArB;AA0BA,SAASP,cAAT","sourcesContent":["/**\r\n * Vignette shader\r\n * based on PaintEffect postprocess from ro.me\r\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\r\n */\r\nvar VignetteShader = {\r\n  uniforms: {\r\n    tDiffuse: {\r\n      value: null\r\n    },\r\n    offset: {\r\n      value: 1.0\r\n    },\r\n    darkness: {\r\n      value: 1.0\r\n    }\r\n  },\r\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\r\n  fragmentShader: ['uniform float offset;', 'uniform float darkness;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {', // Eskil's vignette\r\n  '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );', '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\r\n  /*\r\n  // alternative version from glfx.js\r\n  // this one makes more \"dusty\" look (as opposed to \"burned\")\r\n  \"\tvec4 color = texture2D( tDiffuse, vUv );\",\r\n  \"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\r\n  \"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\r\n  \"\tgl_FragColor = color;\",\r\n  */\r\n  '}'].join('\\n')\r\n};\r\n\r\nexport { VignetteShader };\r\n"]},"metadata":{},"sourceType":"module"}