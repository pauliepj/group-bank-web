{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  camera,\n  regress,\n  enableDamping = true,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = () => {\n      invalidate();\n      if (regress) performance.regress();\n    };\n\n    controls.connect(gl.domElement);\n    controls.addEventListener('change', callback);\n    return () => {\n      controls.removeEventListener('change', callback);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [regress, controls, invalidate]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","React","useThree","useFrame","OrbitControls","OrbitControls$1","forwardRef","camera","regress","enableDamping","restProps","ref","invalidate","defaultCamera","gl","performance","explCamera","controls","useMemo","enabled","update","useEffect","callback","connect","domElement","addEventListener","removeEventListener","dispose","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,aAAa,IAAIC,eAA1B,QAAiD,cAAjD;AAEA,MAAMD,aAAa,GAAG,aAAaH,KAAK,CAACK,UAAN,CAAiB,CAAC;AACnDC,EAAAA,MADmD;AAEnDC,EAAAA,OAFmD;AAGnDC,EAAAA,aAAa,GAAG,IAHmC;AAInD,KAAGC;AAJgD,CAAD,EAKjDC,GALiD,KAKzC;AACT,QAAMC,UAAU,GAAGV,QAAQ,CAAC,CAAC;AAC3BU,IAAAA;AAD2B,GAAD,KAEtBA,UAFqB,CAA3B;AAGA,QAAMC,aAAa,GAAGX,QAAQ,CAAC,CAAC;AAC9BK,IAAAA;AAD8B,GAAD,KAEzBA,MAFwB,CAA9B;AAGA,QAAMO,EAAE,GAAGZ,QAAQ,CAAC,CAAC;AACnBY,IAAAA;AADmB,GAAD,KAEdA,EAFa,CAAnB;AAGA,QAAMC,WAAW,GAAGb,QAAQ,CAAC,CAAC;AAC5Ba,IAAAA;AAD4B,GAAD,KAEvBA,WAFsB,CAA5B;AAGA,QAAMC,UAAU,GAAGT,MAAM,IAAIM,aAA7B;AACA,QAAMI,QAAQ,GAAGhB,KAAK,CAACiB,OAAN,CAAc,MAAM,IAAIb,eAAJ,CAAoBW,UAApB,CAApB,EAAqD,CAACA,UAAD,CAArD,CAAjB;AACAb,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIc,QAAQ,CAACE,OAAb,EAAsBF,QAAQ,CAACG,MAAT;AACvB,GAFO,CAAR;AAGAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,MAAM;AACrBV,MAAAA,UAAU;AACV,UAAIJ,OAAJ,EAAaO,WAAW,CAACP,OAAZ;AACd,KAHD;;AAKAS,IAAAA,QAAQ,CAACM,OAAT,CAAiBT,EAAE,CAACU,UAApB;AACAP,IAAAA,QAAQ,CAACQ,gBAAT,CAA0B,QAA1B,EAAoCH,QAApC;AACA,WAAO,MAAM;AACXL,MAAAA,QAAQ,CAACS,mBAAT,CAA6B,QAA7B,EAAuCJ,QAAvC;AACAL,MAAAA,QAAQ,CAACU,OAAT;AACD,KAHD,CARoB,CAWjB;AACJ,GAZD,EAYG,CAACnB,OAAD,EAAUS,QAAV,EAAoBL,UAApB,CAZH;AAaA,SAAO,aAAaX,KAAK,CAAC2B,aAAN,CAAoB,WAApB,EAAiC5B,QAAQ,CAAC;AAC5DW,IAAAA,GAAG,EAAEA,GADuD;AAE5DkB,IAAAA,MAAM,EAAEZ,QAFoD;AAG5DR,IAAAA,aAAa,EAAEA;AAH6C,GAAD,EAI1DC,SAJ0D,CAAzC,CAApB;AAKD,CAzCkC,CAAnC;AA2CA,SAASN,aAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\r\n\r\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\r\n  camera,\r\n  regress,\r\n  enableDamping = true,\r\n  ...restProps\r\n}, ref) => {\r\n  const invalidate = useThree(({\r\n    invalidate\r\n  }) => invalidate);\r\n  const defaultCamera = useThree(({\r\n    camera\r\n  }) => camera);\r\n  const gl = useThree(({\r\n    gl\r\n  }) => gl);\r\n  const performance = useThree(({\r\n    performance\r\n  }) => performance);\r\n  const explCamera = camera || defaultCamera;\r\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\r\n  useFrame(() => {\r\n    if (controls.enabled) controls.update();\r\n  });\r\n  React.useEffect(() => {\r\n    const callback = () => {\r\n      invalidate();\r\n      if (regress) performance.regress();\r\n    };\r\n\r\n    controls.connect(gl.domElement);\r\n    controls.addEventListener('change', callback);\r\n    return () => {\r\n      controls.removeEventListener('change', callback);\r\n      controls.dispose();\r\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [regress, controls, invalidate]);\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    ref: ref,\r\n    object: controls,\r\n    enableDamping: enableDamping\r\n  }, restProps));\r\n});\r\n\r\nexport { OrbitControls };\r\n"]},"metadata":{},"sourceType":"module"}