{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/useHelper.js"],"names":["React","useThree","useFrame","useHelper","object3D","proto","args","helper","useRef","scene","state","useEffect","current","add","remove","update"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC,GAAGC,IAAvC,EAA6C;AAC3C,QAAMC,MAAM,GAAGP,KAAK,CAACQ,MAAN,EAAf;AACA,QAAMC,KAAK,GAAGR,QAAQ,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAtB;AACAT,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,QAAIN,KAAK,IAAID,QAAQ,CAACQ,OAAtB,EAA+B;AAC7BL,MAAAA,MAAM,CAACK,OAAP,GAAiB,IAAIP,KAAJ,CAAUD,QAAQ,CAACQ,OAAnB,EAA4B,GAAGN,IAA/B,CAAjB;;AAEA,UAAIC,MAAM,CAACK,OAAX,EAAoB;AAClBH,QAAAA,KAAK,CAACI,GAAN,CAAUN,MAAM,CAACK,OAAjB;AACD;AACF;;AAED,WAAO,MAAM;AACX,UAAIL,MAAM,CAACK,OAAX,EAAoB;AAClBH,QAAAA,KAAK,CAACK,MAAN,CAAaP,MAAM,CAACK,OAApB;AACD;AACF,KAJD;AAKD,GAdD,EAcG,CAACH,KAAD,EAAQJ,KAAR,EAAeD,QAAf,EAAyBE,IAAzB,CAdH;AAeAJ,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIK,MAAM,CAACK,OAAX,EAAoB;AAClBL,MAAAA,MAAM,CAACK,OAAP,CAAeG,MAAf;AACD;AACF,GAJO,CAAR;AAKA,SAAOR,MAAP;AACD;;AAED,SAASJ,SAAT","sourcesContent":["import * as React from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\n\r\nfunction useHelper(object3D, proto, ...args) {\r\n  const helper = React.useRef();\r\n  const scene = useThree(state => state.scene);\r\n  React.useEffect(() => {\r\n    if (proto && object3D.current) {\r\n      helper.current = new proto(object3D.current, ...args);\r\n\r\n      if (helper.current) {\r\n        scene.add(helper.current);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (helper.current) {\r\n        scene.remove(helper.current);\r\n      }\r\n    };\r\n  }, [scene, proto, object3D, args]);\r\n  useFrame(() => {\r\n    if (helper.current) {\r\n      helper.current.update();\r\n    }\r\n  });\r\n  return helper;\r\n}\r\n\r\nexport { useHelper };\r\n"]},"metadata":{},"sourceType":"module"}