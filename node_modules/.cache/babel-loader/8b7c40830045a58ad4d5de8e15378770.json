{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\n\nfunction LightNode(scope) {\n  TempNode.call(this, 'v3', {\n    shared: false\n  });\n  this.scope = scope || LightNode.TOTAL;\n}\n\nLightNode.TOTAL = 'total';\nLightNode.prototype = Object.create(TempNode.prototype);\nLightNode.prototype.constructor = LightNode;\nLightNode.prototype.nodeType = 'Light';\n\nLightNode.prototype.generate = function (builder, output) {\n  if (builder.isCache('light')) {\n    return builder.format('reflectedLight.directDiffuse', this.type, output);\n  } else {\n    console.warn('THREE.LightNode is only compatible in \"light\" channel.');\n    return builder.format('vec3( 0.0 )', this.type, output);\n  }\n};\n\nLightNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\n\nLightNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n\n  return data;\n};\n\nexport { LightNode };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/nodes/accessors/LightNode.js"],"names":["TempNode","LightNode","scope","call","shared","TOTAL","prototype","Object","create","constructor","nodeType","generate","builder","output","isCache","format","type","console","warn","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxBF,EAAAA,QAAQ,CAACG,IAAT,CAAc,IAAd,EAAoB,IAApB,EAA0B;AACxBC,IAAAA,MAAM,EAAE;AADgB,GAA1B;AAGA,OAAKF,KAAL,GAAaA,KAAK,IAAID,SAAS,CAACI,KAAhC;AACD;;AAEDJ,SAAS,CAACI,KAAV,GAAkB,OAAlB;AACAJ,SAAS,CAACK,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcR,QAAQ,CAACM,SAAvB,CAAtB;AACAL,SAAS,CAACK,SAAV,CAAoBG,WAApB,GAAkCR,SAAlC;AACAA,SAAS,CAACK,SAAV,CAAoBI,QAApB,GAA+B,OAA/B;;AAEAT,SAAS,CAACK,SAAV,CAAoBK,QAApB,GAA+B,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACxD,MAAID,OAAO,CAACE,OAAR,CAAgB,OAAhB,CAAJ,EAA8B;AAC5B,WAAOF,OAAO,CAACG,MAAR,CAAe,8BAAf,EAA+C,KAAKC,IAApD,EAA0DH,MAA1D,CAAP;AACD,GAFD,MAEO;AACLI,IAAAA,OAAO,CAACC,IAAR,CAAa,wDAAb;AACA,WAAON,OAAO,CAACG,MAAR,CAAe,aAAf,EAA8B,KAAKC,IAAnC,EAAyCH,MAAzC,CAAP;AACD;AACF,CAPD;;AASAZ,SAAS,CAACK,SAAV,CAAoBa,IAApB,GAA2B,UAAUC,MAAV,EAAkB;AAC3CpB,EAAAA,QAAQ,CAACM,SAAT,CAAmBa,IAAnB,CAAwBhB,IAAxB,CAA6B,IAA7B,EAAmCiB,MAAnC;AACA,OAAKlB,KAAL,GAAakB,MAAM,CAAClB,KAApB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAD,SAAS,CAACK,SAAV,CAAoBe,MAApB,GAA6B,UAAUC,IAAV,EAAgB;AAC3C,MAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;AACAC,IAAAA,IAAI,CAACrB,KAAL,GAAa,KAAKA,KAAlB;AACD;;AAED,SAAOqB,IAAP;AACD,CATD;;AAWA,SAAStB,SAAT","sourcesContent":["import { TempNode } from '../core/TempNode.js';\r\n\r\nfunction LightNode(scope) {\r\n  TempNode.call(this, 'v3', {\r\n    shared: false\r\n  });\r\n  this.scope = scope || LightNode.TOTAL;\r\n}\r\n\r\nLightNode.TOTAL = 'total';\r\nLightNode.prototype = Object.create(TempNode.prototype);\r\nLightNode.prototype.constructor = LightNode;\r\nLightNode.prototype.nodeType = 'Light';\r\n\r\nLightNode.prototype.generate = function (builder, output) {\r\n  if (builder.isCache('light')) {\r\n    return builder.format('reflectedLight.directDiffuse', this.type, output);\r\n  } else {\r\n    console.warn('THREE.LightNode is only compatible in \"light\" channel.');\r\n    return builder.format('vec3( 0.0 )', this.type, output);\r\n  }\r\n};\r\n\r\nLightNode.prototype.copy = function (source) {\r\n  TempNode.prototype.copy.call(this, source);\r\n  this.scope = source.scope;\r\n  return this;\r\n};\r\n\r\nLightNode.prototype.toJSON = function (meta) {\r\n  var data = this.getJSONNode(meta);\r\n\r\n  if (!data) {\r\n    data = this.createJSONNode(meta);\r\n    data.scope = this.scope;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport { LightNode };\r\n"]},"metadata":{},"sourceType":"module"}