{"ast":null,"code":"import * as React from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const mouse = useThree(state => state.mouse);\n  const [raycast] = React.useState(() => {\n    let raycaster = new Raycaster();\n    /**\r\n     * applyProps is an internal method of r3f and\r\n     * therefore requires its first arg to be an\r\n     * \"Instance\" a term used with the Reconciler\r\n     * so we have an expect error to mask this\r\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/useCamera.js"],"names":["React","Raycaster","Camera","useThree","applyProps","useCamera","camera","props","mouse","state","raycast","useState","raycaster","_","intersects","setFromCamera","current","rc","constructor","prototype","bind"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAChC,QAAMC,KAAK,GAAGL,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAtB;AACA,QAAM,CAACE,OAAD,IAAYV,KAAK,CAACW,QAAN,CAAe,MAAM;AACrC,QAAIC,SAAS,GAAG,IAAIX,SAAJ,EAAhB;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;;AAEA,QAAIM,KAAJ,EAAWH,UAAU,CAACQ,SAAD,EAAYL,KAAZ,EAAmB,EAAnB,CAAV;AACX,WAAO,UAAUM,CAAV,EAAaC,UAAb,EAAyB;AAC9BF,MAAAA,SAAS,CAACG,aAAV,CAAwBP,KAAxB,EAA+BF,MAAM,YAAYJ,MAAlB,GAA2BI,MAA3B,GAAoCA,MAAM,CAACU,OAA1E;AACA,YAAMC,EAAE,GAAG,KAAKC,WAAL,CAAiBC,SAAjB,CAA2BT,OAA3B,CAAmCU,IAAnC,CAAwC,IAAxC,CAAX;AACA,UAAIH,EAAJ,EAAQA,EAAE,CAACL,SAAD,EAAYE,UAAZ,CAAF;AACT,KAJD;AAKD,GAhBiB,CAAlB;AAiBA,SAAOJ,OAAP;AACD;;AAED,SAASL,SAAT","sourcesContent":["import * as React from 'react';\r\nimport { Raycaster, Camera } from 'three';\r\nimport { useThree, applyProps } from '@react-three/fiber';\r\n\r\nfunction useCamera(camera, props) {\r\n  const mouse = useThree(state => state.mouse);\r\n  const [raycast] = React.useState(() => {\r\n    let raycaster = new Raycaster();\r\n    /**\r\n     * applyProps is an internal method of r3f and\r\n     * therefore requires its first arg to be an\r\n     * \"Instance\" a term used with the Reconciler\r\n     * so we have an expect error to mask this\r\n     */\r\n    // @ts-expect-error\r\n\r\n    if (props) applyProps(raycaster, props, {});\r\n    return function (_, intersects) {\r\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\r\n      const rc = this.constructor.prototype.raycast.bind(this);\r\n      if (rc) rc(raycaster, intersects);\r\n    };\r\n  });\r\n  return raycast;\r\n}\r\n\r\nexport { useCamera };\r\n"]},"metadata":{},"sourceType":"module"}