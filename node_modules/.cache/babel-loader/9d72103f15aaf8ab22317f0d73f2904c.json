{"ast":null,"code":"import { Node } from '../../core/Node.js';\n\nfunction RawNode(value) {\n  Node.call(this, 'v4');\n  this.value = value;\n}\n\nRawNode.prototype = Object.create(Node.prototype);\nRawNode.prototype.constructor = RawNode;\nRawNode.prototype.nodeType = 'Raw';\n\nRawNode.prototype.generate = function (builder) {\n  var data = this.value.analyzeAndFlow(builder, this.type),\n      code = data.code + '\\n';\n\n  if (builder.isShader('vertex')) {\n    code += 'gl_Position = ' + data.result + ';';\n  } else {\n    code += 'gl_FragColor = ' + data.result + ';';\n  }\n\n  return code;\n};\n\nRawNode.prototype.copy = function (source) {\n  Node.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\n\nRawNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { RawNode };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/nodes/materials/nodes/RawNode.js"],"names":["Node","RawNode","value","call","prototype","Object","create","constructor","nodeType","generate","builder","data","analyzeAndFlow","type","code","isShader","result","copy","source","toJSON","meta","getJSONNode","createJSONNode","uuid"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtBF,EAAAA,IAAI,CAACG,IAAL,CAAU,IAAV,EAAgB,IAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACD;;AAEDD,OAAO,CAACG,SAAR,GAAoBC,MAAM,CAACC,MAAP,CAAcN,IAAI,CAACI,SAAnB,CAApB;AACAH,OAAO,CAACG,SAAR,CAAkBG,WAAlB,GAAgCN,OAAhC;AACAA,OAAO,CAACG,SAAR,CAAkBI,QAAlB,GAA6B,KAA7B;;AAEAP,OAAO,CAACG,SAAR,CAAkBK,QAAlB,GAA6B,UAAUC,OAAV,EAAmB;AAC9C,MAAIC,IAAI,GAAG,KAAKT,KAAL,CAAWU,cAAX,CAA0BF,OAA1B,EAAmC,KAAKG,IAAxC,CAAX;AAAA,MACIC,IAAI,GAAGH,IAAI,CAACG,IAAL,GAAY,IADvB;;AAGA,MAAIJ,OAAO,CAACK,QAAR,CAAiB,QAAjB,CAAJ,EAAgC;AAC9BD,IAAAA,IAAI,IAAI,mBAAmBH,IAAI,CAACK,MAAxB,GAAiC,GAAzC;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,IAAI,oBAAoBH,IAAI,CAACK,MAAzB,GAAkC,GAA1C;AACD;;AAED,SAAOF,IAAP;AACD,CAXD;;AAaAb,OAAO,CAACG,SAAR,CAAkBa,IAAlB,GAAyB,UAAUC,MAAV,EAAkB;AACzClB,EAAAA,IAAI,CAACI,SAAL,CAAea,IAAf,CAAoBd,IAApB,CAAyB,IAAzB,EAA+Be,MAA/B;AACA,OAAKhB,KAAL,GAAagB,MAAM,CAAChB,KAApB;AACA,SAAO,IAAP;AACD,CAJD;;AAMAD,OAAO,CAACG,SAAR,CAAkBe,MAAlB,GAA2B,UAAUC,IAAV,EAAgB;AACzC,MAAIT,IAAI,GAAG,KAAKU,WAAL,CAAiBD,IAAjB,CAAX;;AAEA,MAAI,CAACT,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKW,cAAL,CAAoBF,IAApB,CAAP;AACAT,IAAAA,IAAI,CAACT,KAAL,GAAa,KAAKA,KAAL,CAAWiB,MAAX,CAAkBC,IAAlB,EAAwBG,IAArC;AACD;;AAED,SAAOZ,IAAP;AACD,CATD;;AAWA,SAASV,OAAT","sourcesContent":["import { Node } from '../../core/Node.js';\r\n\r\nfunction RawNode(value) {\r\n  Node.call(this, 'v4');\r\n  this.value = value;\r\n}\r\n\r\nRawNode.prototype = Object.create(Node.prototype);\r\nRawNode.prototype.constructor = RawNode;\r\nRawNode.prototype.nodeType = 'Raw';\r\n\r\nRawNode.prototype.generate = function (builder) {\r\n  var data = this.value.analyzeAndFlow(builder, this.type),\r\n      code = data.code + '\\n';\r\n\r\n  if (builder.isShader('vertex')) {\r\n    code += 'gl_Position = ' + data.result + ';';\r\n  } else {\r\n    code += 'gl_FragColor = ' + data.result + ';';\r\n  }\r\n\r\n  return code;\r\n};\r\n\r\nRawNode.prototype.copy = function (source) {\r\n  Node.prototype.copy.call(this, source);\r\n  this.value = source.value;\r\n  return this;\r\n};\r\n\r\nRawNode.prototype.toJSON = function (meta) {\r\n  var data = this.getJSONNode(meta);\r\n\r\n  if (!data) {\r\n    data = this.createJSONNode(meta);\r\n    data.value = this.value.toJSON(meta).uuid;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport { RawNode };\r\n"]},"metadata":{},"sourceType":"module"}