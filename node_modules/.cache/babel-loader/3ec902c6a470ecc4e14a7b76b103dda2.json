{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar follow_1 = require(\"../grammar/follow\");\n\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\n\nvar errors_public_1 = require(\"../errors_public\");\n\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\n\nvar recoverable_1 = require(\"./traits/recoverable\");\n\nvar looksahead_1 = require(\"./traits/looksahead\");\n\nvar tree_builder_1 = require(\"./traits/tree_builder\");\n\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\n\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\n\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\n\nvar error_handler_1 = require(\"./traits/error_handler\");\n\nvar context_assist_1 = require(\"./traits/context_assist\");\n\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\n\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\n\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\n\nexports.END_OF_FILE = tokens_public_1.createTokenInstance(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function () {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\n\nfunction EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n\n  return function () {\n    return value;\n  };\n}\n\nexports.EMPTY_ALT = EMPTY_ALT;\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(tokenVocabulary, config) {\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n\n    if (utils_1.has(config, \"ignoredIssues\")) {\n      throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" + \"For further details.\");\n    }\n\n    this.skipValidations = utils_1.has(config, \"skipValidations\") ? config.skipValidations : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\r\n   *  @deprecated use the **instance** method with the same name instead\r\n   */\n\n\n  Parser.performSelfAnalysis = function (parserInstance) {\n    throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" + \"\\t\\nUse the **instance** method with the same name instead.\");\n  };\n\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        utils_1.toFastProperties(_this);\n      });\n\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording(); // Building the GAST\n\n\n          utils_1.forEach(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast = undefined;\n\n            _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n\n      var resolverErrors = [];\n\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = gast_resolver_public_1.resolveGrammar({\n          rules: utils_1.values(_this.gastProductionsCache)\n        });\n        _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (utils_1.isEmpty(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = gast_resolver_public_1.validateGrammar({\n            rules: utils_1.values(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: utils_1.values(_this.tokensMap),\n            errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n          _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n        }\n      }); // this analysis may fail if the grammar is not perfectly valid\n\n\n      if (utils_1.isEmpty(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = follow_1.computeAllProdsFollows(utils_1.values(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions(utils_1.values(_this.gastProductionsCache));\n        });\n      }\n\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !utils_1.isEmpty(_this.definitionErrors)) {\n        defErrorsMsgs = utils_1.map(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n      }\n    });\n  }; // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n\n\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\n\nexports.Parser = Parser;\napply_mixins_1.applyMixins(Parser, [recoverable_1.Recoverable, looksahead_1.LooksAhead, tree_builder_1.TreeBuilder, lexer_adapter_1.LexerAdapter, recognizer_engine_1.RecognizerEngine, recognizer_api_1.RecognizerApi, error_handler_1.ErrorHandler, context_assist_1.ContentAssist, gast_recorder_1.GastRecorder, perf_tracer_1.PerformanceTracer]);\n\nvar CstParser =\n/** @class */\nfunction (_super) {\n  __extends(CstParser, _super);\n\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = utils_1.cloneObj(config);\n    configClone.outputCst = true;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return CstParser;\n}(Parser);\n\nexports.CstParser = CstParser;\n\nvar EmbeddedActionsParser =\n/** @class */\nfunction (_super) {\n  __extends(EmbeddedActionsParser, _super);\n\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = utils_1.cloneObj(config);\n    configClone.outputCst = false;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return EmbeddedActionsParser;\n}(Parser);\n\nexports.EmbeddedActionsParser = EmbeddedActionsParser;","map":{"version":3,"sources":["../../../../src/parse/parser/parser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\r\nvar utils_1 = require(\"@chevrotain/utils\");\r\nvar follow_1 = require(\"../grammar/follow\");\r\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\r\nvar errors_public_1 = require(\"../errors_public\");\r\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\r\nvar recoverable_1 = require(\"./traits/recoverable\");\r\nvar looksahead_1 = require(\"./traits/looksahead\");\r\nvar tree_builder_1 = require(\"./traits/tree_builder\");\r\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\r\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\r\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\r\nvar error_handler_1 = require(\"./traits/error_handler\");\r\nvar context_assist_1 = require(\"./traits/context_assist\");\r\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\r\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\r\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\r\nexports.END_OF_FILE = tokens_public_1.createTokenInstance(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\r\nObject.freeze(exports.END_OF_FILE);\r\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\r\n    recoveryEnabled: false,\r\n    maxLookahead: 3,\r\n    dynamicTokensEnabled: false,\r\n    outputCst: true,\r\n    errorMessageProvider: errors_public_1.defaultParserErrorProvider,\r\n    nodeLocationTracking: \"none\",\r\n    traceInitPerf: false,\r\n    skipValidations: false\r\n});\r\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\r\n    recoveryValueFunc: function () { return undefined; },\r\n    resyncEnabled: true\r\n});\r\nvar ParserDefinitionErrorType;\r\n(function (ParserDefinitionErrorType) {\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\r\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\r\nfunction EMPTY_ALT(value) {\r\n    if (value === void 0) { value = undefined; }\r\n    return function () {\r\n        return value;\r\n    };\r\n}\r\nexports.EMPTY_ALT = EMPTY_ALT;\r\nvar Parser = /** @class */ (function () {\r\n    function Parser(tokenVocabulary, config) {\r\n        this.definitionErrors = [];\r\n        this.selfAnalysisDone = false;\r\n        var that = this;\r\n        that.initErrorHandler(config);\r\n        that.initLexerAdapter();\r\n        that.initLooksAhead(config);\r\n        that.initRecognizerEngine(tokenVocabulary, config);\r\n        that.initRecoverable(config);\r\n        that.initTreeBuilder(config);\r\n        that.initContentAssist();\r\n        that.initGastRecorder(config);\r\n        that.initPerformanceTracer(config);\r\n        if (utils_1.has(config, \"ignoredIssues\")) {\r\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\r\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\r\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\r\n                \"For further details.\");\r\n        }\r\n        this.skipValidations = utils_1.has(config, \"skipValidations\")\r\n            ? config.skipValidations\r\n            : exports.DEFAULT_PARSER_CONFIG.skipValidations;\r\n    }\r\n    /**\r\n     *  @deprecated use the **instance** method with the same name instead\r\n     */\r\n    Parser.performSelfAnalysis = function (parserInstance) {\r\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\r\n            \"\\t\\nUse the **instance** method with the same name instead.\");\r\n    };\r\n    Parser.prototype.performSelfAnalysis = function () {\r\n        var _this = this;\r\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\r\n            var defErrorsMsgs;\r\n            _this.selfAnalysisDone = true;\r\n            var className = _this.className;\r\n            _this.TRACE_INIT(\"toFastProps\", function () {\r\n                // Without this voodoo magic the parser would be x3-x4 slower\r\n                // It seems it is better to invoke `toFastProperties` **before**\r\n                // Any manipulations of the `this` object done during the recording phase.\r\n                utils_1.toFastProperties(_this);\r\n            });\r\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\r\n                try {\r\n                    _this.enableRecording();\r\n                    // Building the GAST\r\n                    utils_1.forEach(_this.definedRulesNames, function (currRuleName) {\r\n                        var wrappedRule = _this[currRuleName];\r\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\r\n                        var recordedRuleGast = undefined;\r\n                        _this.TRACE_INIT(currRuleName + \" Rule\", function () {\r\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\r\n                        });\r\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\r\n                    });\r\n                }\r\n                finally {\r\n                    _this.disableRecording();\r\n                }\r\n            });\r\n            var resolverErrors = [];\r\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\r\n                resolverErrors = gast_resolver_public_1.resolveGrammar({\r\n                    rules: utils_1.values(_this.gastProductionsCache)\r\n                });\r\n                _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\r\n            });\r\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\r\n                // only perform additional grammar validations IFF no resolving errors have occurred.\r\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\r\n                if (utils_1.isEmpty(resolverErrors) && _this.skipValidations === false) {\r\n                    var validationErrors = gast_resolver_public_1.validateGrammar({\r\n                        rules: utils_1.values(_this.gastProductionsCache),\r\n                        maxLookahead: _this.maxLookahead,\r\n                        tokenTypes: utils_1.values(_this.tokensMap),\r\n                        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\r\n                        grammarName: className\r\n                    });\r\n                    _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\r\n                }\r\n            });\r\n            // this analysis may fail if the grammar is not perfectly valid\r\n            if (utils_1.isEmpty(_this.definitionErrors)) {\r\n                // The results of these computations are not needed unless error recovery is enabled.\r\n                if (_this.recoveryEnabled) {\r\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\r\n                        var allFollows = follow_1.computeAllProdsFollows(utils_1.values(_this.gastProductionsCache));\r\n                        _this.resyncFollows = allFollows;\r\n                    });\r\n                }\r\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\r\n                    _this.preComputeLookaheadFunctions(utils_1.values(_this.gastProductionsCache));\r\n                });\r\n            }\r\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\r\n                !utils_1.isEmpty(_this.definitionErrors)) {\r\n                defErrorsMsgs = utils_1.map(_this.definitionErrors, function (defError) { return defError.message; });\r\n                throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\r\n            }\r\n        });\r\n    };\r\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\r\n    // (normally during the parser's constructor).\r\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\r\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\r\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\r\n    // needing to display the parser definition errors in some GUI(online playground).\r\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\r\n    return Parser;\r\n}());\r\nexports.Parser = Parser;\r\napply_mixins_1.applyMixins(Parser, [\r\n    recoverable_1.Recoverable,\r\n    looksahead_1.LooksAhead,\r\n    tree_builder_1.TreeBuilder,\r\n    lexer_adapter_1.LexerAdapter,\r\n    recognizer_engine_1.RecognizerEngine,\r\n    recognizer_api_1.RecognizerApi,\r\n    error_handler_1.ErrorHandler,\r\n    context_assist_1.ContentAssist,\r\n    gast_recorder_1.GastRecorder,\r\n    perf_tracer_1.PerformanceTracer\r\n]);\r\nvar CstParser = /** @class */ (function (_super) {\r\n    __extends(CstParser, _super);\r\n    function CstParser(tokenVocabulary, config) {\r\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\r\n        var _this = this;\r\n        var configClone = utils_1.cloneObj(config);\r\n        configClone.outputCst = true;\r\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\r\n        return _this;\r\n    }\r\n    return CstParser;\r\n}(Parser));\r\nexports.CstParser = CstParser;\r\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\r\n    __extends(EmbeddedActionsParser, _super);\r\n    function EmbeddedActionsParser(tokenVocabulary, config) {\r\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\r\n        var _this = this;\r\n        var configClone = utils_1.cloneObj(config);\r\n        configClone.outputCst = false;\r\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\r\n        return _this;\r\n    }\r\n    return EmbeddedActionsParser;\r\n}(Parser));\r\nexports.EmbeddedActionsParser = EmbeddedActionsParser;\r\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"script"}