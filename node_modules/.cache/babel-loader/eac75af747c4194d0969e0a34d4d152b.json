{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\n\nfunction CondNode(a, b, op, ifNode, elseNode) {\n  TempNode.call(this);\n  this.a = a;\n  this.b = b;\n  this.op = op;\n  this.ifNode = ifNode;\n  this.elseNode = elseNode;\n}\n\nCondNode.EQUAL = '==';\nCondNode.NOT_EQUAL = '!=';\nCondNode.GREATER = '>';\nCondNode.GREATER_EQUAL = '>=';\nCondNode.LESS = '<';\nCondNode.LESS_EQUAL = '<=';\nCondNode.AND = '&&';\nCondNode.OR = '||';\nCondNode.prototype = Object.create(TempNode.prototype);\nCondNode.prototype.constructor = CondNode;\nCondNode.prototype.nodeType = 'Cond';\n\nCondNode.prototype.getType = function (builder) {\n  if (this.ifNode) {\n    var ifType = this.ifNode.getType(builder);\n    var elseType = this.elseNode.getType(builder);\n\n    if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\n      return elseType;\n    }\n\n    return ifType;\n  }\n\n  return 'b';\n};\n\nCondNode.prototype.getCondType = function (builder) {\n  if (builder.getTypeLength(this.b.getType(builder)) > builder.getTypeLength(this.a.getType(builder))) {\n    return this.b.getType(builder);\n  }\n\n  return this.a.getType(builder);\n};\n\nCondNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder),\n      condType = this.getCondType(builder),\n      a = this.a.build(builder, condType),\n      b = this.b.build(builder, condType),\n      code;\n\n  if (this.ifNode) {\n    var ifCode = this.ifNode.build(builder, type),\n        elseCode = this.elseNode.build(builder, type);\n    code = '( ' + [a, this.op, b, '?', ifCode, ':', elseCode].join(' ') + ' )';\n  } else {\n    code = '( ' + a + ' ' + this.op + ' ' + b + ' )';\n  }\n\n  return builder.format(code, this.getType(builder), output);\n};\n\nCondNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.a = source.a;\n  this.b = source.b;\n  this.op = source.op;\n  this.ifNode = source.ifNode;\n  this.elseNode = source.elseNode;\n  return this;\n};\n\nCondNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.a = this.a.toJSON(meta).uuid;\n    data.b = this.b.toJSON(meta).uuid;\n    data.op = this.op;\n    if (data.ifNode) data.ifNode = this.ifNode.toJSON(meta).uuid;\n    if (data.elseNode) data.elseNode = this.elseNode.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { CondNode };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/nodes/math/CondNode.js"],"names":["TempNode","CondNode","a","b","op","ifNode","elseNode","call","EQUAL","NOT_EQUAL","GREATER","GREATER_EQUAL","LESS","LESS_EQUAL","AND","OR","prototype","Object","create","constructor","nodeType","getType","builder","ifType","elseType","getTypeLength","getCondType","generate","output","type","condType","build","code","ifCode","elseCode","join","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":"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","sourcesContent":["import { TempNode } from '../core/TempNode.js';\r\n\r\nfunction CondNode(a, b, op, ifNode, elseNode) {\r\n  TempNode.call(this);\r\n  this.a = a;\r\n  this.b = b;\r\n  this.op = op;\r\n  this.ifNode = ifNode;\r\n  this.elseNode = elseNode;\r\n}\r\n\r\nCondNode.EQUAL = '==';\r\nCondNode.NOT_EQUAL = '!=';\r\nCondNode.GREATER = '>';\r\nCondNode.GREATER_EQUAL = '>=';\r\nCondNode.LESS = '<';\r\nCondNode.LESS_EQUAL = '<=';\r\nCondNode.AND = '&&';\r\nCondNode.OR = '||';\r\nCondNode.prototype = Object.create(TempNode.prototype);\r\nCondNode.prototype.constructor = CondNode;\r\nCondNode.prototype.nodeType = 'Cond';\r\n\r\nCondNode.prototype.getType = function (builder) {\r\n  if (this.ifNode) {\r\n    var ifType = this.ifNode.getType(builder);\r\n    var elseType = this.elseNode.getType(builder);\r\n\r\n    if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\r\n      return elseType;\r\n    }\r\n\r\n    return ifType;\r\n  }\r\n\r\n  return 'b';\r\n};\r\n\r\nCondNode.prototype.getCondType = function (builder) {\r\n  if (builder.getTypeLength(this.b.getType(builder)) > builder.getTypeLength(this.a.getType(builder))) {\r\n    return this.b.getType(builder);\r\n  }\r\n\r\n  return this.a.getType(builder);\r\n};\r\n\r\nCondNode.prototype.generate = function (builder, output) {\r\n  var type = this.getType(builder),\r\n      condType = this.getCondType(builder),\r\n      a = this.a.build(builder, condType),\r\n      b = this.b.build(builder, condType),\r\n      code;\r\n\r\n  if (this.ifNode) {\r\n    var ifCode = this.ifNode.build(builder, type),\r\n        elseCode = this.elseNode.build(builder, type);\r\n    code = '( ' + [a, this.op, b, '?', ifCode, ':', elseCode].join(' ') + ' )';\r\n  } else {\r\n    code = '( ' + a + ' ' + this.op + ' ' + b + ' )';\r\n  }\r\n\r\n  return builder.format(code, this.getType(builder), output);\r\n};\r\n\r\nCondNode.prototype.copy = function (source) {\r\n  TempNode.prototype.copy.call(this, source);\r\n  this.a = source.a;\r\n  this.b = source.b;\r\n  this.op = source.op;\r\n  this.ifNode = source.ifNode;\r\n  this.elseNode = source.elseNode;\r\n  return this;\r\n};\r\n\r\nCondNode.prototype.toJSON = function (meta) {\r\n  var data = this.getJSONNode(meta);\r\n\r\n  if (!data) {\r\n    data = this.createJSONNode(meta);\r\n    data.a = this.a.toJSON(meta).uuid;\r\n    data.b = this.b.toJSON(meta).uuid;\r\n    data.op = this.op;\r\n    if (data.ifNode) data.ifNode = this.ifNode.toJSON(meta).uuid;\r\n    if (data.elseNode) data.elseNode = this.elseNode.toJSON(meta).uuid;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport { CondNode };\r\n"]},"metadata":{},"sourceType":"module"}