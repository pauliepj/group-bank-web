{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get factor() {\n    return this._factor.value;\n  }\n\n  set factor(v) {\n    this._factor.value = v;\n  }\n\n}\n\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshWobbleMaterial };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/@react-three/drei/core/MeshWobbleMaterial.js"],"names":["_extends","React","MeshStandardMaterial","useFrame","WobbleMaterialImpl","constructor","parameters","setValues","_time","value","_factor","onBeforeCompile","shader","uniforms","time","factor","vertexShader","replace","v","MeshWobbleMaterial","forwardRef","speed","props","ref","material","useState","state","clock","getElapsedTime","createElement","dispose","undefined","object","attach"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,kBAAN,SAAiCF,oBAAjC,CAAsD;AACpDG,EAAAA,WAAW,CAACC,UAAU,GAAG,EAAd,EAAkB;AAC3B,UAAMA,UAAN;AACA,SAAKC,SAAL,CAAeD,UAAf;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,OAAL,GAAe;AACbD,MAAAA,KAAK,EAAE;AADM,KAAf;AAGD;;AAEDE,EAAAA,eAAe,CAACC,MAAD,EAAS;AACtBA,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,KAAKN,KAA5B;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAAyB,KAAKL,OAA9B;AACAE,IAAAA,MAAM,CAACI,YAAP,GAAuB;AAC3B;AACA;AACA,QAAQJ,MAAM,CAACI,YAAa;AAC5B,KAJI;AAKAJ,IAAAA,MAAM,CAACI,YAAP,GAAsBJ,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4B,yBAA5B,EAAwD;AAClF;AACA;AACA;AACA;AACA,+BAL0B,CAAtB;AAMD;;AAEO,MAAJH,IAAI,GAAG;AACT,WAAO,KAAKN,KAAL,CAAWC,KAAlB;AACD;;AAEO,MAAJK,IAAI,CAACI,CAAD,EAAI;AACV,SAAKV,KAAL,CAAWC,KAAX,GAAmBS,CAAnB;AACD;;AAES,MAANH,MAAM,GAAG;AACX,WAAO,KAAKL,OAAL,CAAaD,KAApB;AACD;;AAES,MAANM,MAAM,CAACG,CAAD,EAAI;AACZ,SAAKR,OAAL,CAAaD,KAAb,GAAqBS,CAArB;AACD;;AA1CmD;;AA8CtD,MAAMC,kBAAkB,GAAG,aAAalB,KAAK,CAACmB,UAAN,CAAiB,CAAC;AACxDC,EAAAA,KAAK,GAAG,CADgD;AAExD,KAAGC;AAFqD,CAAD,EAGtDC,GAHsD,KAG9C;AACT,QAAM,CAACC,QAAD,IAAavB,KAAK,CAACwB,QAAN,CAAe,MAAM,IAAIrB,kBAAJ,EAArB,CAAnB;AACAD,EAAAA,QAAQ,CAACuB,KAAK,IAAIF,QAAQ,KAAKA,QAAQ,CAACV,IAAT,GAAgBY,KAAK,CAACC,KAAN,CAAYC,cAAZ,KAA+BP,KAApD,CAAlB,CAAR;AACA,SAAO,aAAapB,KAAK,CAAC4B,aAAN,CAAoB,WAApB,EAAiC7B,QAAQ,CAAC;AAC5D8B,IAAAA,OAAO,EAAEC,SADmD;AAE5DC,IAAAA,MAAM,EAAER,QAFoD;AAG5DD,IAAAA,GAAG,EAAEA,GAHuD;AAI5DU,IAAAA,MAAM,EAAE;AAJoD,GAAD,EAK1DX,KAL0D,CAAzC,CAApB;AAMD,CAZuC,CAAxC;AAcA,SAASH,kBAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\r\nimport * as React from 'react';\r\nimport { MeshStandardMaterial } from 'three';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nclass WobbleMaterialImpl extends MeshStandardMaterial {\r\n  constructor(parameters = {}) {\r\n    super(parameters);\r\n    this.setValues(parameters);\r\n    this._time = {\r\n      value: 0\r\n    };\r\n    this._factor = {\r\n      value: 1\r\n    };\r\n  }\r\n\r\n  onBeforeCompile(shader) {\r\n    shader.uniforms.time = this._time;\r\n    shader.uniforms.factor = this._factor;\r\n    shader.vertexShader = `\r\n      uniform float time;\r\n      uniform float factor;\r\n      ${shader.vertexShader}\r\n    `;\r\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\r\n        float c = cos( theta );\r\n        float s = sin( theta );\r\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\r\n        vec3 transformed = vec3( position ) * m;\r\n        vNormal = vNormal * m;`);\r\n  }\r\n\r\n  get time() {\r\n    return this._time.value;\r\n  }\r\n\r\n  set time(v) {\r\n    this._time.value = v;\r\n  }\r\n\r\n  get factor() {\r\n    return this._factor.value;\r\n  }\r\n\r\n  set factor(v) {\r\n    this._factor.value = v;\r\n  }\r\n\r\n}\r\n\r\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(({\r\n  speed = 1,\r\n  ...props\r\n}, ref) => {\r\n  const [material] = React.useState(() => new WobbleMaterialImpl());\r\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    dispose: undefined,\r\n    object: material,\r\n    ref: ref,\r\n    attach: \"material\"\r\n  }, props));\r\n});\r\n\r\nexport { MeshWobbleMaterial };\r\n"]},"metadata":{},"sourceType":"module"}