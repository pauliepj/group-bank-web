{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\n\nfunction PositionNode(scope) {\n  TempNode.call(this, 'v3');\n  this.scope = scope || PositionNode.LOCAL;\n}\n\nPositionNode.LOCAL = 'local';\nPositionNode.WORLD = 'world';\nPositionNode.VIEW = 'view';\nPositionNode.PROJECTION = 'projection';\nPositionNode.prototype = Object.create(TempNode.prototype);\nPositionNode.prototype.constructor = PositionNode;\nPositionNode.prototype.nodeType = 'Position';\n\nPositionNode.prototype.getType = function () {\n  switch (this.scope) {\n    case PositionNode.PROJECTION:\n      return 'v4';\n  }\n\n  return this.type;\n};\n\nPositionNode.prototype.getShared = function ()\n/* builder */\n{\n  switch (this.scope) {\n    case PositionNode.LOCAL:\n    case PositionNode.WORLD:\n      return false;\n  }\n\n  return true;\n};\n\nPositionNode.prototype.generate = function (builder, output) {\n  var result;\n\n  switch (this.scope) {\n    case PositionNode.LOCAL:\n      if (builder.isShader('vertex')) {\n        result = 'transformed';\n      } else {\n        builder.requires.position = true;\n        result = 'vPosition';\n      }\n\n      break;\n\n    case PositionNode.WORLD:\n      if (builder.isShader('vertex')) {\n        return '( modelMatrix * vec4( transformed, 1.0 ) ).xyz';\n      } else {\n        builder.requires.worldPosition = true;\n        result = 'vWPosition';\n      }\n\n      break;\n\n    case PositionNode.VIEW:\n      result = builder.isShader('vertex') ? '-mvPosition.xyz' : 'vViewPosition';\n      break;\n\n    case PositionNode.PROJECTION:\n      result = builder.isShader('vertex') ? '( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )' : 'vec4( 0.0 )';\n      break;\n  }\n\n  return builder.format(result, this.getType(builder), output);\n};\n\nPositionNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\n\nPositionNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n\n  return data;\n};\n\nNodeLib.addKeyword('position', function () {\n  return new PositionNode();\n});\nNodeLib.addKeyword('worldPosition', function () {\n  return new PositionNode(PositionNode.WORLD);\n});\nNodeLib.addKeyword('viewPosition', function () {\n  return new PositionNode(PositionNode.VIEW);\n});\nexport { PositionNode };","map":{"version":3,"sources":["C:/Users/samue/Documents/REACTworkspace/group-bank-web/node_modules/three-stdlib/nodes/accessors/PositionNode.js"],"names":["TempNode","NodeLib","PositionNode","scope","call","LOCAL","WORLD","VIEW","PROJECTION","prototype","Object","create","constructor","nodeType","getType","type","getShared","generate","builder","output","result","isShader","requires","position","worldPosition","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword"],"mappings":"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","sourcesContent":["import { TempNode } from '../core/TempNode.js';\r\nimport { NodeLib } from '../core/NodeLib.js';\r\n\r\nfunction PositionNode(scope) {\r\n  TempNode.call(this, 'v3');\r\n  this.scope = scope || PositionNode.LOCAL;\r\n}\r\n\r\nPositionNode.LOCAL = 'local';\r\nPositionNode.WORLD = 'world';\r\nPositionNode.VIEW = 'view';\r\nPositionNode.PROJECTION = 'projection';\r\nPositionNode.prototype = Object.create(TempNode.prototype);\r\nPositionNode.prototype.constructor = PositionNode;\r\nPositionNode.prototype.nodeType = 'Position';\r\n\r\nPositionNode.prototype.getType = function () {\r\n  switch (this.scope) {\r\n    case PositionNode.PROJECTION:\r\n      return 'v4';\r\n  }\r\n\r\n  return this.type;\r\n};\r\n\r\nPositionNode.prototype.getShared = function ()\r\n/* builder */\r\n{\r\n  switch (this.scope) {\r\n    case PositionNode.LOCAL:\r\n    case PositionNode.WORLD:\r\n      return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nPositionNode.prototype.generate = function (builder, output) {\r\n  var result;\r\n\r\n  switch (this.scope) {\r\n    case PositionNode.LOCAL:\r\n      if (builder.isShader('vertex')) {\r\n        result = 'transformed';\r\n      } else {\r\n        builder.requires.position = true;\r\n        result = 'vPosition';\r\n      }\r\n\r\n      break;\r\n\r\n    case PositionNode.WORLD:\r\n      if (builder.isShader('vertex')) {\r\n        return '( modelMatrix * vec4( transformed, 1.0 ) ).xyz';\r\n      } else {\r\n        builder.requires.worldPosition = true;\r\n        result = 'vWPosition';\r\n      }\r\n\r\n      break;\r\n\r\n    case PositionNode.VIEW:\r\n      result = builder.isShader('vertex') ? '-mvPosition.xyz' : 'vViewPosition';\r\n      break;\r\n\r\n    case PositionNode.PROJECTION:\r\n      result = builder.isShader('vertex') ? '( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )' : 'vec4( 0.0 )';\r\n      break;\r\n  }\r\n\r\n  return builder.format(result, this.getType(builder), output);\r\n};\r\n\r\nPositionNode.prototype.copy = function (source) {\r\n  TempNode.prototype.copy.call(this, source);\r\n  this.scope = source.scope;\r\n  return this;\r\n};\r\n\r\nPositionNode.prototype.toJSON = function (meta) {\r\n  var data = this.getJSONNode(meta);\r\n\r\n  if (!data) {\r\n    data = this.createJSONNode(meta);\r\n    data.scope = this.scope;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nNodeLib.addKeyword('position', function () {\r\n  return new PositionNode();\r\n});\r\nNodeLib.addKeyword('worldPosition', function () {\r\n  return new PositionNode(PositionNode.WORLD);\r\n});\r\nNodeLib.addKeyword('viewPosition', function () {\r\n  return new PositionNode(PositionNode.VIEW);\r\n});\r\n\r\nexport { PositionNode };\r\n"]},"metadata":{},"sourceType":"module"}